Ignored unknown kwarg option normalize
Ignored unknown kwarg option normalize
Ignored unknown kwarg option normalize
Ignored unknown kwarg option normalize
0/153516
128/153516
Data: tensor([[[ -6.9356],
         [-11.3068],
         [  4.1876],
         ...,
         [-25.7561],
         [ -4.1169],
         [ -2.9785]],

        [[  2.2972],
         [ -2.9740],
         [ 14.9634],
         ...,
         [  5.9244],
         [ -7.9080],
         [  3.5064]],

        [[-20.2206],
         [  8.0074],
         [-14.6650],
         ...,
         [-10.0508],
         [ -5.4166],
         [-18.0583]],

        ...,

        [[  1.4254],
         [ -1.8324],
         [-24.9052],
         ...,
         [  5.0219],
         [  1.8135],
         [ -6.2967]],

        [[ -9.8963],
         [-21.6197],
         [-49.0544],
         ...,
         [ 16.8009],
         [ 22.6152],
         [-15.5548]],

        [[  9.8560],
         [-11.4075],
         [ -6.7027],
         ...,
         [ 25.6032],
         [-14.5388],
         [ -8.8666]]])
Labels: tensor([0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 1, 0, 0, 1, 0, 1, 0, 0, 0, 0, 0,
        0, 1, 1, 1, 1, 0, 0, 1, 0, 1, 0, 0, 0, 1, 0, 1, 0, 0, 1, 1, 1, 0, 0, 0,
        1, 1, 0, 1, 0, 0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 1, 1, 1, 0, 1, 1, 0, 0,
        0, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 1, 0, 0, 1, 1, 1, 0, 0, 0, 1, 0, 1,
        1, 1, 0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 0, 0, 1, 0, 0, 0, 1, 1, 0, 0, 0,
        1, 0, 1, 1, 0, 1, 0, 1])
Step 1: 
tensor([[[  5.3201],
         [ -2.3925],
         [ -0.1580],
         ...,
         [  1.6492],
         [-13.2909],
         [ -3.0877]],

        [[ -0.4510],
         [  2.9506],
         [  4.2661],
         ...,
         [  5.7906],
         [  2.7657],
         [  2.2205]],

        [[ -3.2350],
         [  6.5747],
         [ -5.1901],
         ...,
         [ -6.1231],
         [-10.8200],
         [-18.4984]],

        ...,

        [[ -4.7543],
         [ -2.2317],
         [  1.9817],
         ...,
         [ 15.2730],
         [ 22.5160],
         [ 22.5107]],

        [[  0.4576],
         [ -9.7423],
         [  7.3077],
         ...,
         [  7.5542],
         [  7.1952],
         [  9.6566]],

        [[-13.1674],
         [ -3.6318],
         [  7.5812],
         ...,
         [  8.2111],
         [ 22.8520],
         [ 17.9703]]], grad_fn=<ConvolutionBackward0>)
	==>shape: torch.Size([128, 1024, 1])
	Nan values: False
	Is there inf values: False
Step 2: 
tensor([[[ 5.3201],
         [ 0.0000],
         [ 0.0000],
         ...,
         [ 1.6492],
         [ 0.0000],
         [ 0.0000]],

        [[ 0.0000],
         [ 2.9506],
         [ 4.2661],
         ...,
         [ 5.7906],
         [ 2.7657],
         [ 2.2205]],

        [[ 0.0000],
         [ 6.5747],
         [ 0.0000],
         ...,
         [ 0.0000],
         [ 0.0000],
         [ 0.0000]],

        ...,

        [[ 0.0000],
         [ 0.0000],
         [ 1.9817],
         ...,
         [15.2730],
         [22.5160],
         [22.5107]],

        [[ 0.4576],
         [ 0.0000],
         [ 7.3077],
         ...,
         [ 7.5542],
         [ 7.1952],
         [ 9.6566]],

        [[ 0.0000],
         [ 0.0000],
         [ 7.5812],
         ...,
         [ 8.2111],
         [22.8520],
         [17.9703]]], grad_fn=<ReluBackward0>)
	==>shape: torch.Size([128, 1024, 1])
	Nan values: False
	Is there inf values: False
Step 3: 
tensor([[[ 1.0802],
         [-0.6304],
         [-0.7633],
         ...,
         [-0.1526],
         [-0.7837],
         [-0.6868]],

        [[-0.5759],
         [ 0.0237],
         [ 0.4879],
         ...,
         [ 1.0432],
         [-0.4081],
         [-0.4311]],

        [[-0.5759],
         [ 0.8270],
         [-0.7633],
         ...,
         [-0.6288],
         [-0.7837],
         [-0.6868]],

        ...,

        [[-0.5759],
         [-0.6304],
         [-0.1821],
         ...,
         [ 3.7810],
         [ 2.2744],
         [ 1.9054]],

        [[-0.4335],
         [-0.6304],
         [ 1.3800],
         ...,
         [ 1.5523],
         [ 0.1935],
         [ 0.4252]],

        [[-0.5759],
         [-0.6304],
         [ 1.4602],
         ...,
         [ 1.7420],
         [ 2.3200],
         [ 1.3825]]], grad_fn=<NativeBatchNormBackward0>)
	==>shape: torch.Size([128, 1024, 1])
	Nan values: False
	Is there inf values: False
Step 4: 
tensor([[[ 0.9523],
         [-0.8792],
         [ 1.0601],
         ...,
         [-0.1335],
         [-0.8026],
         [-1.0043]],

        [[-0.6766],
         [-0.3327],
         [ 0.3882],
         ...,
         [ 1.5034],
         [-0.7660],
         [-0.7614]],

        [[-0.9312],
         [ 1.1627],
         [-1.1213],
         ...,
         [-0.0434],
         [-0.3186],
         [-0.4086]],

        ...,

        [[-0.8892],
         [-0.9310],
         [-0.3152],
         ...,
         [ 3.4629],
         [ 2.7163],
         [ 1.6062]],

        [[ 0.3877],
         [-0.9254],
         [ 2.3134],
         ...,
         [ 1.1584],
         [-0.1235],
         [ 0.1186]],

        [[-0.8776],
         [-0.9503],
         [ 1.6805],
         ...,
         [ 1.3410],
         [ 1.9356],
         [ 1.0687]]], grad_fn=<AddBackward0>)
	==>shape: torch.Size([128, 1024, 1])
	Nan values: False
	Is there inf values: False
Step 5: 
tensor([[[ 1.7591],
         [-1.8402],
         [ 0.5328],
         ...,
         [-0.5814],
         [-1.9080],
         [-2.0938]],

        [[-1.5597],
         [-0.6226],
         [ 0.7109],
         ...,
         [ 2.2766],
         [-1.4706],
         [-1.5491]],

        [[-1.1459],
         [ 1.6726],
         [-2.1074],
         ...,
         [-0.9393],
         [-0.5831],
         [-0.7358]],

        ...,

        [[-1.6362],
         [-1.8875],
         [-0.8241],
         ...,
         [ 7.0078],
         [ 4.9254],
         [ 3.5260]],

        [[-0.3178],
         [-1.8488],
         [ 3.3838],
         ...,
         [ 2.9741],
         [-0.3012],
         [ 0.5479]],

        [[-1.3035],
         [-0.3676],
         [ 2.7817],
         ...,
         [ 2.7299],
         [ 4.0521],
         [ 2.1617]]], grad_fn=<AddBackward0>)
	==>shape: torch.Size([128, 1024, 1])
	Nan values: False
	Is there inf values: False
Step 6: 
tensor([[[ 4.4952],
         [-3.6807],
         [ 0.4205],
         ...,
         [-1.1897],
         [-3.8138],
         [-4.1284]],

        [[-3.1283],
         [-1.2777],
         [ 1.2210],
         ...,
         [ 4.5421],
         [-2.9872],
         [-2.9293]],

        [[-2.6765],
         [ 4.2563],
         [-4.3369],
         ...,
         [-1.7230],
         [-2.1053],
         [-2.1628]],

        ...,

        [[-3.4832],
         [-1.8841],
         [-1.4864],
         ...,
         [14.2012],
         [10.9681],
         [ 6.7141]],

        [[ 0.2435],
         [-3.8113],
         [ 7.6766],
         ...,
         [ 5.4075],
         [-0.6472],
         [ 0.7166]],

        [[-2.4853],
         [-1.8579],
         [ 5.5648],
         ...,
         [ 6.2332],
         [ 7.9128],
         [ 5.3083]]], grad_fn=<AddBackward0>)
	==>shape: torch.Size([128, 1024, 1])
	Nan values: False
	Is there inf values: False
Step 7: 
tensor([[[-0.7736],
         [-1.6289],
         [ 0.7296],
         ...,
         [-1.3074],
         [ 1.4634],
         [-2.0862]],

        [[-2.1068],
         [-0.2792],
         [ 0.0651],
         ...,
         [-0.1675],
         [ 1.5935],
         [ 0.8485]],

        [[ 1.0884],
         [-0.7410],
         [-0.0378],
         ...,
         [ 0.1524],
         [ 0.2189],
         [ 0.1882]],

        ...,

        [[-1.5626],
         [-2.8181],
         [ 1.5538],
         ...,
         [-1.5944],
         [ 2.0180],
         [ 2.2413]],

        [[-0.8607],
         [-3.0408],
         [ 2.0876],
         ...,
         [-0.0646],
         [ 2.0047],
         [ 0.4466]],

        [[-1.3779],
         [-1.1432],
         [ 0.6885],
         ...,
         [-1.1945],
         [ 1.7414],
         [ 3.0244]]], grad_fn=<ConvolutionBackward0>)
	==>shape: torch.Size([128, 1536, 1])
	Nan values: False
	Is there inf values: False
Step 8: 
tensor([[[0.0000],
         [0.0000],
         [0.7296],
         ...,
         [0.0000],
         [1.4634],
         [0.0000]],

        [[0.0000],
         [0.0000],
         [0.0651],
         ...,
         [0.0000],
         [1.5935],
         [0.8485]],

        [[1.0884],
         [0.0000],
         [0.0000],
         ...,
         [0.1524],
         [0.2189],
         [0.1882]],

        ...,

        [[0.0000],
         [0.0000],
         [1.5538],
         ...,
         [0.0000],
         [2.0180],
         [2.2413]],

        [[0.0000],
         [0.0000],
         [2.0876],
         ...,
         [0.0000],
         [2.0047],
         [0.4466]],

        [[0.0000],
         [0.0000],
         [0.6885],
         ...,
         [0.0000],
         [1.7414],
         [3.0244]]], grad_fn=<ReluBackward0>)
	==>shape: torch.Size([128, 1536, 1])
	Nan values: False
	Is there inf values: False
Step 9 (x_mean): 
tensor([[[0.0000],
         [0.0000],
         [0.7296],
         ...,
         [0.0000],
         [1.4634],
         [0.0000]],

        [[0.0000],
         [0.0000],
         [0.0651],
         ...,
         [0.0000],
         [1.5935],
         [0.8485]],

        [[1.0884],
         [0.0000],
         [0.0000],
         ...,
         [0.1524],
         [0.2189],
         [0.1882]],

        ...,

        [[0.0000],
         [0.0000],
         [1.5538],
         ...,
         [0.0000],
         [2.0180],
         [2.2413]],

        [[0.0000],
         [0.0000],
         [2.0876],
         ...,
         [0.0000],
         [2.0047],
         [0.4466]],

        [[0.0000],
         [0.0000],
         [0.6885],
         ...,
         [0.0000],
         [1.7414],
         [3.0244]]], grad_fn=<MeanBackward1>)
	==>shape: torch.Size([128, 1536, 1])
	Nan values: False
	Is there inf values: False
Step 9 (x_mean_repeat): 
tensor([[[0.0000],
         [0.0000],
         [0.7296],
         ...,
         [0.0000],
         [1.4634],
         [0.0000]],

        [[0.0000],
         [0.0000],
         [0.0651],
         ...,
         [0.0000],
         [1.5935],
         [0.8485]],

        [[1.0884],
         [0.0000],
         [0.0000],
         ...,
         [0.1524],
         [0.2189],
         [0.1882]],

        ...,

        [[0.0000],
         [0.0000],
         [1.5538],
         ...,
         [0.0000],
         [2.0180],
         [2.2413]],

        [[0.0000],
         [0.0000],
         [2.0876],
         ...,
         [0.0000],
         [2.0047],
         [0.4466]],

        [[0.0000],
         [0.0000],
         [0.6885],
         ...,
         [0.0000],
         [1.7414],
         [3.0244]]], grad_fn=<RepeatBackward0>)
	==>shape: torch.Size([128, 1536, 1])
	Nan values: False
	Is there inf values: False
Step 9 (x_var): 
tensor([[[nan],
         [nan],
         [nan],
         ...,
         [nan],
         [nan],
         [nan]],

        [[nan],
         [nan],
         [nan],
         ...,
         [nan],
         [nan],
         [nan]],

        [[nan],
         [nan],
         [nan],
         ...,
         [nan],
         [nan],
         [nan]],

        ...,

        [[nan],
         [nan],
         [nan],
         ...,
         [nan],
         [nan],
         [nan]],

        [[nan],
         [nan],
         [nan],
         ...,
         [nan],
         [nan],
         [nan]],

        [[nan],
         [nan],
         [nan],
         ...,
         [nan],
         [nan],
         [nan]]], grad_fn=<VarBackward0>)
	==>shape: torch.Size([128, 1536, 1])
	Nan values: True
	Is there inf values: False
Step 9 (x_var_clamp): 
tensor([[[nan],
         [nan],
         [nan],
         ...,
         [nan],
         [nan],
         [nan]],

        [[nan],
         [nan],
         [nan],
         ...,
         [nan],
         [nan],
         [nan]],

        [[nan],
         [nan],
         [nan],
         ...,
         [nan],
         [nan],
         [nan]],

        ...,

        [[nan],
         [nan],
         [nan],
         ...,
         [nan],
         [nan],
         [nan]],

        [[nan],
         [nan],
         [nan],
         ...,
         [nan],
         [nan],
         [nan]],

        [[nan],
         [nan],
         [nan],
         ...,
         [nan],
         [nan],
         [nan]]], grad_fn=<ClampBackward1>)
	==>shape: torch.Size([128, 1536, 1])
	Nan values: True
	Is there inf values: False
Step 9 (x_var_clamp_sqrt): 
tensor([[[nan],
         [nan],
         [nan],
         ...,
         [nan],
         [nan],
         [nan]],

        [[nan],
         [nan],
         [nan],
         ...,
         [nan],
         [nan],
         [nan]],

        [[nan],
         [nan],
         [nan],
         ...,
         [nan],
         [nan],
         [nan]],

        ...,

        [[nan],
         [nan],
         [nan],
         ...,
         [nan],
         [nan],
         [nan]],

        [[nan],
         [nan],
         [nan],
         ...,
         [nan],
         [nan],
         [nan]],

        [[nan],
         [nan],
         [nan],
         ...,
         [nan],
         [nan],
         [nan]]], grad_fn=<SqrtBackward0>)
	==>shape: torch.Size([128, 1536, 1])
	Nan values: True
	Is there inf values: False
Step 9: 
tensor([[[0.0000],
         [0.0000],
         [0.7296],
         ...,
         [   nan],
         [   nan],
         [   nan]],

        [[0.0000],
         [0.0000],
         [0.0651],
         ...,
         [   nan],
         [   nan],
         [   nan]],

        [[1.0884],
         [0.0000],
         [0.0000],
         ...,
         [   nan],
         [   nan],
         [   nan]],

        ...,

        [[0.0000],
         [0.0000],
         [1.5538],
         ...,
         [   nan],
         [   nan],
         [   nan]],

        [[0.0000],
         [0.0000],
         [2.0876],
         ...,
         [   nan],
         [   nan],
         [   nan]],

        [[0.0000],
         [0.0000],
         [0.6885],
         ...,
         [   nan],
         [   nan],
         [   nan]]], grad_fn=<CatBackward0>)
	==>shape: torch.Size([128, 4608, 1])
	Nan values: True
	Is there inf values: False
Step 10: 
tensor([[[nan],
         [nan],
         [nan],
         ...,
         [nan],
         [nan],
         [nan]],

        [[nan],
         [nan],
         [nan],
         ...,
         [nan],
         [nan],
         [nan]],

        [[nan],
         [nan],
         [nan],
         ...,
         [nan],
         [nan],
         [nan]],

        ...,

        [[nan],
         [nan],
         [nan],
         ...,
         [nan],
         [nan],
         [nan]],

        [[nan],
         [nan],
         [nan],
         ...,
         [nan],
         [nan],
         [nan]],

        [[nan],
         [nan],
         [nan],
         ...,
         [nan],
         [nan],
         [nan]]], grad_fn=<SoftmaxBackward0>)
	==>shape: torch.Size([128, 1536, 1])
	Nan values: True
	Is there inf values: False
Step 11: 
tensor([[nan, nan, nan,  ..., nan, nan, nan],
        [nan, nan, nan,  ..., nan, nan, nan],
        [nan, nan, nan,  ..., nan, nan, nan],
        ...,
        [nan, nan, nan,  ..., nan, nan, nan],
        [nan, nan, nan,  ..., nan, nan, nan],
        [nan, nan, nan,  ..., nan, nan, nan]], grad_fn=<CatBackward0>)
Step 12: 
tensor([[nan, nan, nan,  ..., nan, nan, nan],
        [nan, nan, nan,  ..., nan, nan, nan],
        [nan, nan, nan,  ..., nan, nan, nan],
        ...,
        [nan, nan, nan,  ..., nan, nan, nan],
        [nan, nan, nan,  ..., nan, nan, nan],
        [nan, nan, nan,  ..., nan, nan, nan]],
       grad_fn=<NativeBatchNormBackward0>)
Step 13: 
tensor([[nan, nan, nan,  ..., nan, nan, nan],
        [nan, nan, nan,  ..., nan, nan, nan],
        [nan, nan, nan,  ..., nan, nan, nan],
        ...,
        [nan, nan, nan,  ..., nan, nan, nan],
        [nan, nan, nan,  ..., nan, nan, nan],
        [nan, nan, nan,  ..., nan, nan, nan]], grad_fn=<AddmmBackward0>)
Step 14: 
tensor([[nan, nan, nan,  ..., nan, nan, nan],
        [nan, nan, nan,  ..., nan, nan, nan],
        [nan, nan, nan,  ..., nan, nan, nan],
        ...,
        [nan, nan, nan,  ..., nan, nan, nan],
        [nan, nan, nan,  ..., nan, nan, nan],
        [nan, nan, nan,  ..., nan, nan, nan]],
       grad_fn=<NativeBatchNormBackward0>)
10-27 10:09:57 [ 1] Lr: 0.001000, Training: 100.00%,  Loss: nan, ACC: 60.16%
