{"config":{"indexing":"full","lang":["en"],"min_search_length":3,"prebuild_index":false,"separator":"[\\s\\-]+"},"docs":[{"location":"","text":"Kiwano documentation Kiwano is an advanced open-source toolkit for speaker verification, built on PyTorch and designed for both research and real-world applications. It provides a modular and extensible framework that includes: High-performance speaker embedding architectures such as ResNet, ECAPA-TDNN, ECAPA2, ReDimNet. A suite of speaker embedding preprocessing tools for normalization (AS-Norm, AD-Norm...), enhancement, and more. Audio data augmentation methods to improve model robustness in diverse environments Ready-to-use recipes for popular datasets like VoxCeleb, CN-Celeb... Kiwano makes it easy to build, train, and evaluate speaker verification systems. Whether you're working on academic research, industrial applications, or competition pipelines, Kiwano helps you develop state-of-the-art models with ease. Its integration with PyTorch ensures flexibility and scalability, while its clean toolkit supports reproducible experiments and efficient workflows.","title":"Home"},{"location":"#kiwano-documentation","text":"Kiwano is an advanced open-source toolkit for speaker verification, built on PyTorch and designed for both research and real-world applications. It provides a modular and extensible framework that includes: High-performance speaker embedding architectures such as ResNet, ECAPA-TDNN, ECAPA2, ReDimNet. A suite of speaker embedding preprocessing tools for normalization (AS-Norm, AD-Norm...), enhancement, and more. Audio data augmentation methods to improve model robustness in diverse environments Ready-to-use recipes for popular datasets like VoxCeleb, CN-Celeb... Kiwano makes it easy to build, train, and evaluate speaker verification systems. Whether you're working on academic research, industrial applications, or competition pipelines, Kiwano helps you develop state-of-the-art models with ease. Its integration with PyTorch ensures flexibility and scalability, while its clean toolkit supports reproducible experiments and efficient workflows.","title":"Kiwano documentation"}]}